<?php

namespace App\Http\Requests;

use App\Exceptions\DuplicateEmailException;
use Illuminate\Contracts\Validation\Validator;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\ValidationException;

class ValidateUserInsert extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        return [
            'nama' => 'required',
            'email' => 'required|email:rfc|unique:user,email',
            'password' => 'required',
            'client_id' => 'nullable',
            'nik' => 'nullable',
            'nomor_telepon' => 'required|max:13'
        ];
    }

    /**
     * @param Validator $validator
     * @throws DuplicateEmailException
     * @throws ValidationException
     */
    protected function failedValidation(Validator $validator)
    {
        if (array_key_exists('email', $validator->errors()->toArray()))
            if (in_array('The email has already been taken.', $validator->errors()->toArray()['email']))
                throw new DuplicateEmailException();

        parent::failedValidation($validator); // TODO: Change the autogenerated stub
    }
}
